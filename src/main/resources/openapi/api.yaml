openapi: '3.0.1'
servers:
  - url: 'http://localhost:8080'
info:
  title: Meemo Service API
  description: >-
    Services controlling meemo
  version: 1.0.0
  contact:
    name: Jens Meinecke
    email: mail@jensmeinecke.de
    url: https://jensmeinecke.de
  license:
    name: GPLv3
    url: 'https://www.gnu.org/licenses/gpl-3.0.txt'
tags:
  - name: campaigns
    description: Operations about campaign
  - name: items
    description: Operations about items of a campaign
  - name: versions
    description: Operations about versions of items

paths:
  /campaigns:
    get:
      summary: 'Find campaigns'
      description: ''
      operationId: findCampaigns
      tags:
        - campaigns
      parameters:
        - name: limit
          in: query
          description: Limit number of records returning
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          $ref: '#/components/responses/ListCampaignsResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
    post:
      summary: 'Create campaign'
      description: 'Create campaign'
      operationId: createCampaign
      tags:
        - campaigns
      requestBody:
        $ref: '#/components/requestBodies/CreateCampaignRequest'
      responses:
        '201':
          $ref: '#/components/responses/DetailCampaignResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
  /campaigns/{campaignId}:
    get:
      summary: 'Get campaign details'
      description: ''
      operationId: readCampaign
      tags:
        - campaigns
      parameters:
        - name: campaignId
          in: path
          description: Unique campaign identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/DetailCampaignResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
    put:
      summary: 'Update campaign details'
      description: ''
      operationId: updateCampaign
      tags:
        - campaigns
      parameters:
        - name: campaignId
          in: path
          description: Unique campaign identifier
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/UpdateCampaignRequest'
      responses:
        '200':
          $ref: '#/components/responses/DetailCampaignResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
    delete:
      summary: 'Delete campaign'
      description: ''
      operationId: deleteCampaign
      tags:
        - campaigns
      parameters:
        - name: campaignId
          in: path
          description: Unique campaign identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Campaign marked as deleted successfully
        default:
          $ref: '#/components/responses/ErrorResponse'
  /campaigns/{campaignId}/duplicate:
    post:
      summary: 'Duplicate campaign with all its data'
      description: ''
      operationId: duplicateCampaign
      tags:
        - campaigns
      parameters:
        - name: campaignId
          in: path
          description: Unique campaign identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/DetailCampaignResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
  /campaigns/{campaignId}/archive:
    post:
      summary: 'Move campaign to archive'
      description: ''
      operationId: archiveCampaign
      tags:
        - campaigns
      parameters:
        - name: campaignId
          in: path
          description: Unique campaign identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/DetailCampaignResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
  /campaigns/{campaignId}/unarchive:
    post:
      summary: 'Unarchive campaign'
      description: ''
      operationId: unarchiveCampaign
      tags:
        - campaigns
      parameters:
        - name: campaignId
          in: path
          description: Unique campaign identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/DetailCampaignResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

  /campaigns/{campaignId}/items:
    get:
      summary: 'Get list of campaign items'
      description: ''
      operationId: getItems
      tags:
        - items
      parameters:
        - name: campaignId
          in: path
          description: Unique campaign identifier
          required: true
          schema:
            type: string
      responses:
        default:
          $ref: '#/components/responses/ErrorResponse'
    post:
      summary: 'Create campaign item'
      description: ''
      operationId: createItem
      tags:
        - items
      parameters:
        - name: campaignId
          in: path
          description: Unique campaign identifier
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/CreateItemRequest'
      responses:
        '201':
          description: Campaign item created (null response).
        default:
          $ref: '#/components/responses/ErrorResponse'
  /items/{itemId}:
    get:
      summary: 'Get campaign item details'
      description: ''
      operationId: getItem
      tags:
        - items
      parameters:
        - name: campaignId
          in: path
          description: Unique campaign identifier
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          description: Unique item identifier
          required: true
          schema:
            type: integer
            format: int32
      responses:
        default:
          $ref: '#/components/responses/ErrorResponse'
    put:
      summary: 'Update campaign item details'
      description: ''
      operationId: updateItem
      tags:
        - items
      parameters:
        - name: campaignId
          in: path
          description: Unique campaign identifier
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          description: Unique item identifier
          required: true
          schema:
            type: integer
            format: int32
      responses:
        default:
          $ref: '#/components/responses/ErrorResponse'
    delete:
      summary: 'Delete campaign item details'
      description: 'Removes an campaign from a campaign with all its data (voting, feedback etc.)'
      operationId: removeItem
      tags:
        - items
      parameters:
        - name: campaignId
          in: path
          description: Unique campaign identifier
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          description: Unique item identifier
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Campaign item deleted (null response).
        '404':
          description: Campaign item not found.
        default:
          $ref: '#/components/responses/ErrorResponse'

  /items/{itemId}/versions:
    get:
      summary: 'Get all versions of a campaign item'
      description: ''
      operationId: getVersions
      tags:
        - versions
      parameters:
        - name: campaignId
          in: path
          description: Unique campaign identifier
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          description: Unique campaign identifier
          required: true
          schema:
            type: integer
            format: int32
      responses:
        default:
          $ref: '#/components/responses/ErrorResponse'
    post:
      summary: 'Create campaign item version'
      description: ''
      operationId: createVersion
      tags:
        - versions
      parameters:
        - name: campaignId
          in: path
          description: Unique campaign identifier
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          description: Unique campaign identifier
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        $ref: '#/components/requestBodies/CreateVersionRequest'
      responses:
        '201':
          description: Campaign item version created (null response).
        default:
          $ref: '#/components/responses/ErrorResponse'
  /versions/{version}:
    get:
      summary: 'Get a version of a campaign item'
      description: ''
      operationId: getVersion
      tags:
        - versions
      parameters:
        - name: campaignId
          in: path
          description: Unique campaign identifier
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          description: Unique campaign identifier
          required: true
          schema:
            type: integer
            format: int32
        - name: version
          in: path
          description: Unique version identifier
          required: true
          schema:
            type: integer
            format: int32
      responses:
        default:
          $ref: '#/components/responses/ErrorResponse'
    put:
      summary: 'Update a version of a campaign item'
      description: ''
      operationId: updateVersion
      tags:
        - versions
      parameters:
        - name: campaignId
          in: path
          description: Unique campaign identifier
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          description: Unique campaign identifier
          required: true
          schema:
            type: integer
            format: int32
        - name: version
          in: path
          description: Unique version identifier
          required: true
          schema:
            type: integer
            format: int32
      responses:
        default:
          $ref: '#/components/responses/ErrorResponse'
    delete:
      summary: 'Delete a version of a campaign item'
      description: ''
      operationId: deleteVersion
      tags:
        - versions
      parameters:
        - name: campaignId
          in: path
          description: Unique campaign identifier
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          description: Unique campaign identifier
          required: true
          schema:
            type: integer
            format: int32
        - name: version
          in: path
          description: Unique version identifier
          required: true
          schema:
            type: integer
            format: int32
      responses:
        default:
          $ref: '#/components/responses/ErrorResponse'


components:
  requestBodies:
    CreateCampaignRequest:
      description: Campaign to create
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CampaignModel'
    UpdateCampaignRequest:
      description: Campaign to update
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CampaignModel'
    CreateItemRequest:
      description: Create campaign item
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ItemModel'
    CreateVersionRequest:
      description: Create campaign item version
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VersionModel'

  responses:
    ListCampaignsResponse:
      description: List of campaigns
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/CampaignModel'
    DetailCampaignResponse:
      description: Campaign details
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CampaignModel'
    ErrorResponse:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorModel'

  schemas:
    ErrorModel:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
    CampaignModel:
      type: object
      properties:
        id:
          type: string
          description: Unique campaign id
        name:
          type: string
          description: Name of the campaign
    ItemModel:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Unique item identifier
        name:
          type: string
          description: Caption of the campaign item
    VersionModel:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Unique version identifier
        comment:
          type: string
          description: Comment on this version

  securitySchemes: {}
  links: {}
  callbacks: {}
security: []
